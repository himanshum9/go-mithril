version: '3.8'

services:
  auth-service:
    build:
      context: ..
      dockerfile: services/auth-service/Dockerfile
    ports:
      - "${AUTH_SERVICE_PORT}:8080"
    env_file:
      - ../.env
    environment:
      - DATABASE_URL=${AUTH_DB_CONN}
      - AWS_COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
      - AWS_COGNITO_REGION=${AWS_REGION}
    depends_on:
      - db
    volumes:
      - ../scripts:/scripts
      - ../migrations:/migrations

  tenant-service:
    build:
      context: ..
      dockerfile: services/tenant-service/Dockerfile
    ports:
      - "${TENANT_SERVICE_PORT}:8080"
    env_file:
      - ../.env
    environment:
      - DATABASE_URL=${TENANT_DB_CONN}
    depends_on:
      - db

  location-service:
    build:
      context: ..
      dockerfile: services/location-service/Dockerfile
    ports:
      - "${LOCATION_SERVICE_PORT}:8080"
    env_file:
      - ../.env
    environment:
      - DATABASE_URL=${LOCATION_DB_CONN}
      - KAFKA_BROKER=${KAFKA_BROKER}
    depends_on:
      - db

  streaming-service:
    build:
      context: ..
      dockerfile: services/streaming-service/Dockerfile
    ports:
      - "${STREAMING_SERVICE_PORT}:8080"
    env_file:
      - ../.env
    environment:
      - STREAMING_ENDPOINT=${STREAMING_ENDPOINT}
    depends_on:
      - db

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  db:
    image: postgres:latest
    restart: always
    env_file:
      - ../.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data: